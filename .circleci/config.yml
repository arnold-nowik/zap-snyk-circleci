version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@7.2.0
  snyk: snyk/snyk@1.2.3
  node: circleci/node@4.2.0
jobs:
  run_tests:
    docker:
      - image: cimg/node:14.16.0
    steps:
      - checkout
      - node/install-packages:
          override-ci-command: npm install
          cache-path: ~/project/node_modules
      - run:
          name: Run Unit Tests
          command: |
            ./node_modules/mocha/bin/mocha test/ --reporter mocha-junit-reporter --reporter-options mochaFile=./test/test-results.xml
            ./node_modules/mocha/bin/mocha test/ --reporter mochawesome --reporter-options reportDir=test-results,reportFilename=test-results
      - store_test_results:
          path: test/
      - store_artifacts:
          path: test-results          
  sca_scan:
    docker:
      - image: cimg/node:14.16.0
    steps:
      - checkout
      - run:
          name: Snyk SCA Scan 
          command: npm install 
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: false
  sast_dast_scan_docker_image:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: medium
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: AWS_REGION
          account-url: AWS_ECR_ACCOUNT_URL
          repo: $AWS_ECR_REPO
          tag: 0.1.<< pipeline.number >>
      - snyk/scan:
          docker-image-name: $AWS_ECR_ACCOUNT_URL/$AWS_ECR_REPO:0.1.<< pipeline.number >>
          fail-on-issues: false
          monitor-on-build: false
          severity-threshold: high
          target-file: Dockerfile
          token-variable: SNYK_TOKEN
      - run:
          name: Run docker container
          command: |
            docker run -d --rm -p5000:5000 $AWS_ECR_ACCOUNT_URL/$AWS_ECR_REPO:0.1.<< pipeline.number >>        
      - run:
          name: ZAP baseline test of application
          command: |
            (
            mkdir /tmp/zap-report
            cd /tmp/zap-report
            docker pull owasp/zap2docker-weekly && \
            docker run -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-weekly zap-baseline.py \
                -u https://raw.githubusercontent.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/master/zap-baseline.conf \
                -t http://172.17.0.2:5000/ \
                -r report.html -J report.json || \
                echo $? > /tmp/result
            )
      - store_artifacts:
          path: /tmp/zap-report
      - run:
          name: Check result of ZAP scan and fail pipeline if exit code was 1
          command: |
            (
            # Fail on error code 1, which indicates at least one FAIL was found.
            # error codes 2 & 3 indicate WARN or other, and should not break the run
            if [ $(cat /tmp/result) -ne 1 ]; then exit 0; else exit 1; fi;
            )
workflows:
  build:
    jobs:
      - run_tests
      - sca_scan:
          requires:
            - run_tests
      - sast_dast_scan_docker_image:
          requires:
            - sca_scan
